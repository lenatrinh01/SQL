# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#Who are the Top 10 artists by popularity?
SELECT track_name
, artist_name
, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity DESC
LIMIT 10
;

#What's the average danceability, energy, and popularity by artist & track (ordered by average popularity)?
SELECT artist_name
, track_name
, AVG(danceability)
, AVG(energy)
, AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name
ORDER BY AVG(popularity) DESC
;

#Calculate the average popularity for the artist. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and lable them as 'Top Star'
#This ustalizes CTE (Common Table Expression)
WITH popularity_average_CTE AS (
SELECT
s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s
GROUP By s.artist_name
)
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90
;
